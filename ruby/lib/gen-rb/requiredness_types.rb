#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

class RequiredBool
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VAL = 1

  FIELDS = {
    VAL => {:type => ::Thrift::Types::BOOL, :name => 'val'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field val is unset!') if @val.nil?
  end

  ::Thrift::Struct.generate_accessors self
end

class DefaultRequiredBool
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VAL = 1

  FIELDS = {
    VAL => {:type => ::Thrift::Types::BOOL, :name => 'val'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class OptionalBool
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VAL = 1

  FIELDS = {
    VAL => {:type => ::Thrift::Types::BOOL, :name => 'val', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RequiredField
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VAL = 1

  FIELDS = {
    VAL => {:type => ::Thrift::Types::BYTE, :name => 'val'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field val is unset!') unless @val
  end

  ::Thrift::Struct.generate_accessors self
end

class DefaultRequiredField
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VAL = 1

  FIELDS = {
    VAL => {:type => ::Thrift::Types::BYTE, :name => 'val'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class OptionalField
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VAL = 1

  FIELDS = {
    VAL => {:type => ::Thrift::Types::BYTE, :name => 'val', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

