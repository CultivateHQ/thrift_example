#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

class DefaultStructVal
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NUM = 1

  FIELDS = {
    NUM => {:type => ::Thrift::Types::BYTE, :name => 'num'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Defaults
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BOOL_FROM_TRUE = 1
  BOOL_FROM_FALSE = 2
  BOOL_FROM_ONE = 3
  BOOL_FROM_ZERO = 4
  BYTE_VAL = 5
  DOUBLE_FROM_FLOAT = 6
  DOUBLE_FROM_INT = 7
  I16_VAL = 8
  I32_VAL = 9
  I64_VAL = 10
  STRING_VAL = 11
  STRUCT_VAL = 12
  MAP_VAL = 13
  SET_VAL = 14
  LIST_VAL = 15
  EMPTY_STRUCT = 120
  EMPTY_MAP = 130
  EMPTY_SET = 140
  EMPTY_LIST = 150

  FIELDS = {
    BOOL_FROM_TRUE => {:type => ::Thrift::Types::BOOL, :name => 'bool_from_true', :default => true},
    BOOL_FROM_FALSE => {:type => ::Thrift::Types::BOOL, :name => 'bool_from_false', :default => false},
    BOOL_FROM_ONE => {:type => ::Thrift::Types::BOOL, :name => 'bool_from_one', :default => true},
    BOOL_FROM_ZERO => {:type => ::Thrift::Types::BOOL, :name => 'bool_from_zero', :default => false},
    BYTE_VAL => {:type => ::Thrift::Types::BYTE, :name => 'byte_val', :default => 5},
    DOUBLE_FROM_FLOAT => {:type => ::Thrift::Types::DOUBLE, :name => 'double_from_float', :default => 0},
    DOUBLE_FROM_INT => {:type => ::Thrift::Types::DOUBLE, :name => 'double_from_int', :default => 0},
    I16_VAL => {:type => ::Thrift::Types::I16, :name => 'i16_val', :default => 5},
    I32_VAL => {:type => ::Thrift::Types::I32, :name => 'i32_val', :default => 5},
    I64_VAL => {:type => ::Thrift::Types::I64, :name => 'i64_val', :default => 5},
    STRING_VAL => {:type => ::Thrift::Types::STRING, :name => 'string_val', :default => %q"abc123"},
    STRUCT_VAL => {:type => ::Thrift::Types::STRUCT, :name => 'struct_val', :default => ::DefaultStructVal.new({
      %q"num" => 5,
    }), :class => ::DefaultStructVal},
    MAP_VAL => {:type => ::Thrift::Types::MAP, :name => 'map_val', :default => {
      %q"a" => 1,
      %q"b" => 2,
    }, :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::BYTE}},
    SET_VAL => {:type => ::Thrift::Types::SET, :name => 'set_val', :default => Set.new([
      %q"a",
      %q"b",
    ]), :element => {:type => ::Thrift::Types::STRING}},
    LIST_VAL => {:type => ::Thrift::Types::LIST, :name => 'list_val', :default => [
      %q"a",
      %q"b",
    ], :element => {:type => ::Thrift::Types::STRING}},
    EMPTY_STRUCT => {:type => ::Thrift::Types::STRUCT, :name => 'empty_struct', :default => ::DefaultStructVal.new({
    }), :class => ::DefaultStructVal},
    EMPTY_MAP => {:type => ::Thrift::Types::MAP, :name => 'empty_map', :default => {
    }, :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::BYTE}},
    EMPTY_SET => {:type => ::Thrift::Types::SET, :name => 'empty_set', :default => Set.new([
    ]), :element => {:type => ::Thrift::Types::STRING}},
    EMPTY_LIST => {:type => ::Thrift::Types::LIST, :name => 'empty_list', :default => [
    ], :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

