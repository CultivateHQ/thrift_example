#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module PowerLevel
  ALPHA = 0
  BETA = 1
  OMEGA = 2
  VALUE_MAP = {0 => "ALPHA", 1 => "BETA", 2 => "OMEGA"}
  VALID_VALUES = Set.new([ALPHA, BETA, OMEGA]).freeze
end

class XMan
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HANDLE = 1
  NAME = 2
  UNIVERSE = 3
  POWER_LEVEL = 4

  FIELDS = {
    HANDLE => {:type => ::Thrift::Types::STRING, :name => 'handle'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    UNIVERSE => {:type => ::Thrift::Types::STRING, :name => 'universe', :default => %q"Earth-616"},
    POWER_LEVEL => {:type => ::Thrift::Types::I32, :name => 'power_level', :enum_class => ::PowerLevel}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @power_level.nil? || ::PowerLevel::VALID_VALUES.include?(@power_level)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field power_level!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

